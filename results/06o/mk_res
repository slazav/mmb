#!/usr/bin/perl -w -I../perl

use strict;
use res;
use reg;

# Чтение данных
my @data;
res::read_tbl("data_in/e0.dat", \@data, 3);
res::read_tbl("data_in/e1s.dat", \@data, 2);
res::read_tbl("data_in/e1v.dat", \@data, 5);
res::read_tbl("data_in/e1f.dat", \@data, 5);
res::read_tbl("data_in/e2s.dat", \@data, 2);
res::read_tbl("data_in/e2f.dat", \@data, 5);
my @cdata;
reg::data_read("data_in/mmb06o_a.dat", \@cdata);
reg::data_read("data_in/mmb06o_b.dat", \@cdata);
MMB::Names::modif_names(\@cdata);

my @ddd;

# Подсчет результатов
for (my $n=0; $n<=$#data; $n++){

  $ddd[$n]->{n}   = $n;

  $ddd[$n]->{d}  = ${$data[$n]}[0];
  $ddd[$n]->{u}  = ${$data[$n]}[1];
  $ddd[$n]->{name}  = ${$data[$n]}[2];

  $ddd[$n]->{d1s}  = ${$data[$n]}[3];
  $ddd[$n]->{t1s}  = ${$data[$n]}[4];

  $ddd[$n]->{d1v} = ${$data[$n]}[5];
  $ddd[$n]->{t1v} = ${$data[$n]}[6];
  $ddd[$n]->{u1v} = ${$data[$n]}[7];
  $ddd[$n]->{kp1} = ${$data[$n]}[8];
  $ddd[$n]->{pr1} = ${$data[$n]}[9];

  $ddd[$n]->{d1f} = ${$data[$n]}[10];
  $ddd[$n]->{t1f} = ${$data[$n]}[11];
  $ddd[$n]->{u1f} = ${$data[$n]}[12];
  $ddd[$n]->{kp2} = ${$data[$n]}[13];
  $ddd[$n]->{pr2} = ${$data[$n]}[14];

  $ddd[$n]->{d2s}  = ${$data[$n]}[15];
  $ddd[$n]->{t2s}  = ${$data[$n]}[16];

  $ddd[$n]->{d2f} = ${$data[$n]}[17];
  $ddd[$n]->{t2f} = ${$data[$n]}[18];
  $ddd[$n]->{u2f} = ${$data[$n]}[19];
  $ddd[$n]->{kp3} = ${$data[$n]}[20];
  $ddd[$n]->{pr3} = ${$data[$n]}[21];

  my $p=0;
  foreach (0..21){
    $p++ if ${$data[$n]}[$_] ne '';
  }
  next if $p==0; # нет заполненых полей вообще

  warn "несовпадение дистанций для команды $n: ".
       "$ddd[$n]->{d} - $ddd[$n]->{d1s} - $ddd[$n]->{d1v} - $ddd[$n]->{d1f} - $ddd[$n]->{d2s} - $ddd[$n]->{d2f}\n"
    if ((($ddd[$n]->{t1s} ne '')&&($ddd[$n]->{d} ne $ddd[$n]->{d1s}))||
        (($ddd[$n]->{t1f} ne '')&&($ddd[$n]->{d} ne $ddd[$n]->{d1f}))||
        (($ddd[$n]->{t1v} ne '')&&($ddd[$n]->{d} ne $ddd[$n]->{d1v}))||
        (($ddd[$n]->{t2s} ne '')&&($ddd[$n]->{d} ne $ddd[$n]->{d2s}))||
        (($ddd[$n]->{t2f} ne '')&&($ddd[$n]->{d} ne $ddd[$n]->{d2f})));

  warn "не совпадает число участников в команде $n: ".
       "$ddd[$n]->{u} - $ddd[$n]->{u1v} - $ddd[$n]->{u1f} - $ddd[$n]->{u2f}\n"
    if ((($ddd[$n]->{t1v} ne '')&&($ddd[$n]->{u} ne $ddd[$n]->{u1v})&&($ddd[$n]->{pr1}!~/su/))||
        (($ddd[$n]->{t1f} ne '')&&($ddd[$n]->{u} ne $ddd[$n]->{u1f})&&($ddd[$n]->{pr2}!~/su/))||
        (($ddd[$n]->{t2f} ne '')&&($ddd[$n]->{u} ne $ddd[$n]->{u2f})&&($ddd[$n]->{pr3}!~/su/)));

  my $shtr1;
  my $shtr2;
  my $shtr3;
#  warn "$n\n";
  if ($ddd[$n]->{d} eq 'a'){
    $shtr1 = res::kp_conv($ddd[$n]->{kp1}, {1=>120, 2=>120, 3=>120, 4=>120, 5=>120, 6=>120, 7=>120, 8=>120, 9=>120});
    $shtr2 = res::kp_conv($ddd[$n]->{kp2}, {1=>60, 2=>60, 3=>60, 4=>60, 5=>60, 6=>60, 7=>60, 8=>60, 9=>60, 10=>60});
    $shtr3 = res::kp_conv($ddd[$n]->{kp3}, {1=>120, 2=>120, 3=>120, 4=>120, 5=>120, 6=>120});
  }
  if ($ddd[$n]->{d} eq 'b'){
    $shtr1 = res::kp_conv($ddd[$n]->{kp1}, {1=>120, 2=>120, 3=>120, 4=>120, 5=>120, 6=>120, 7=>120, 8=>120, 9=>120, 10=>120, 11=>120, 12=>120, 13=>120});
    $shtr2 = res::kp_conv($ddd[$n]->{kp2}, {1=>60, 2=>60, 3=>60, 4=>60, 5=>60, 6=>60, 7=>60, 8=>60, 9=>60, 10=>60});
    $shtr3 = res::kp_conv($ddd[$n]->{kp3}, {1=>120, 2=>120, 3=>120, 4=>120, 5=>120, 6=>120});
  }

  $ddd[$n]->{r1}='';
  if ($ddd[$n]->{t1v} ne ''){
    $ddd[$n]->{r1}= res::time_conv($ddd[$n]->{t1v}, "13:00") - res::time_conv($ddd[$n]->{t1s}, "08:59") + $shtr1;
  }
  $ddd[$n]->{r2}='';
  if ($ddd[$n]->{t1f} ne ''){
    $ddd[$n]->{r2}= res::time_conv($ddd[$n]->{t1f}, "15:00") - res::time_conv($ddd[$n]->{t1s}, "08:59") + $shtr1 + $shtr2;
  }
  $ddd[$n]->{r3}='';
  if ($ddd[$n]->{t2f} ne ''){
    $ddd[$n]->{r3}= res::time_conv($ddd[$n]->{t2f}, "12:00") - res::time_conv($ddd[$n]->{t2s}, "8:59") + $shtr3;
  }
  
  $ddd[$n]->{r} ='';
  $ddd[$n]->{r} = $ddd[$n]->{r2}+$ddd[$n]->{r3}
    if (($ddd[$n]->{r2} ne '')&&($ddd[$n]->{r3} ne ''));

}

foreach my $dist ('a','b'){

# определение мест
my (%r1c, %r2c, %r3c, %rc);
my (%r1m, %r2m, %r3m, %rm);

for (my $n=0; $n<=$#ddd; $n++){ # сколько мест с одинаковым временем
  next if $ddd[$n]->{d} ne $dist;
  $r1c{$ddd[$n]->{r1}}++ if $ddd[$n]->{r1} ne '';
  $r2c{$ddd[$n]->{r2}}++ if $ddd[$n]->{r2} ne '';
  $r3c{$ddd[$n]->{r3}}++ if $ddd[$n]->{r3} ne '';
  next if $ddd[$n]->{pr1} eq 'su';
  next if $ddd[$n]->{pr2} eq 'su';
  next if $ddd[$n]->{pr3} eq 'su';
#  next if $ddd[$n]->{pr1} eq 'kv';
#  next if $ddd[$n]->{pr2} eq 'kv';
#  next if $ddd[$n]->{pr3} eq 'kv';
  $rc{$ddd[$n]->{r}}++ if $ddd[$n]->{r} ne '';
}

my $m=1;
foreach (sort {$a<=>$b} keys %r1c){
  $m += $r1c{$_};
  if ($r1c{$_}==1) {$r1m{$_} = $m-1;}
  else {$r1m{$_} = ($m-$r1c{$_})."-".($m-1);}
}
$m=1;
foreach (sort {$a<=>$b} keys %r2c){
  $m += $r2c{$_};
  if ($r2c{$_}==1) {$r2m{$_} = $m-1;}
  else {$r2m{$_} = ($m-$r2c{$_})."-".($m-1);}
}
$m=1;
foreach (sort {$a<=>$b} keys %r3c){
  $m += $r3c{$_};
  if ($r3c{$_}==1) {$r3m{$_} = $m-1;}
  else {$r3m{$_} = ($m-$r3c{$_})."-".($m-1);}
}
$m=1;
foreach (sort {$a<=>$b} keys %rc){
  $m += $rc{$_};
  if ($rc{$_}==1) {$rm{$_} = $m-1;}
  else {$rm{$_} = ($m-$rc{$_})."-".($m-1);}
}
$r1m{''}='';
$r2m{''}='';
$r3m{''}='';
$rm{''}='';


# глобальный порядок сортировки
my $i=0;
foreach (@ddd) {
  $_->{srt} = 50000;
  next if $_->{d} ne $dist;
  $_->{m1} = $r1m{$_->{r1}};
  $_->{m2} = $r2m{$_->{r2}};
  $_->{m3} = $r3m{$_->{r3}};
  $_->{m} = $rm{$_->{r}};

  $_->{m} = '' if ($_->{pr1} eq 'su');  ## вне зачета
  $_->{m} = '' if ($_->{pr2} eq 'su');  ## вне зачета
  $_->{m} = '' if ($_->{pr3} eq 'su');  ## вне зачета
#  $_->{m} = '' if ($_->{pr1} eq 'kv');  ## вне зачета
#  $_->{m} = '' if ($_->{pr2} eq 'kv');  ## вне зачета
  $_->{m} = '' if ($_->{pr3} eq 'kv');  ## вне зачета

  if    ($_->{m}  =~ /^(\d+)/) {$_->{srt} = $1;}
  elsif ($_->{m3} =~ /^(\d+)/) {$_->{srt} = $1+10000;} ### внезачетники
  elsif ($_->{m2} =~ /^(\d+)/) {$_->{srt} = $1+20000;} ### внезачетники
  elsif ($_->{m1} =~ /^(\d+)/) {$_->{srt} = $1+30000;} ### только первый этап
  else  {$_->{srt} = $i+40000; $i++}
}

 # dist


### вывод!

open OUT, "> data_out/res06o$dist.htm";
my $fg_m = '#F00000';

print OUT qq*
<html><head>
<style type="TEXT/CSS">
TH {font-family: sans-serif; font-size:15px; background-color: \#A0A0A0;}
TD {font-family: sans-serif; font-size:15px; background-color: \#C0C0C0;}
</STYLE>
</head>
<body>
*;

print OUT qq*
<p><table border=0 cellspacing=1 cellpadding=5>
<tr><th colspan=12><font size="+2">Результаты ММБ2006-Осень, дистанция А</font></th>
<th colspan=2>$res::mmb_count
</th>
</tr>
<tr>
<td colspan=15>
<p>Хорошово - Пески, 28-29 октября

<p>Первый этап: 9+10 КП, 24 км. Старт с 9:00 до 14:00 субботы 28 октября,
контрольное время до 14:00 воскресенья.

<p>Второй этап: 6 КП, 14 км. Старт с 9:00 до 14:00 
воскресенья, контрольное время -- до 21:00 воскресенья. 

<p>Команды, опоздавшие к 14:00 на пром.финиш могли стартовать позже.

<p>Штраф за невзятие КП: 1 час на второй части первого этапа
(ориентирование по космостнимку), 2 часа -- все остальные.

<p> Карты дистанции:
<p>
<a href="06o/a1.png">  <img src="06o/a1.jpg"  width=113 height=160 alt="a-1 (первый этап)"></a>
<a href="06o/a2.png">  <img src="06o/a2.jpg"  width=113 height=160 alt="a-2 (первый этап)"></a>
<a href="06o/ab3.png"> <img src="06o/ab3.jpg" width=113 height=160 alt="a-3 (первый этап)"></a>
<a href="06o/a4.png">  <img src="06o/a4.jpg"  width=113 height=160 alt="a-4 (второй этап)"></a>
</td>
</tr>
* if $dist eq 'a'; 

print OUT qq*
<p><table border=0 cellspacing=1 cellpadding=5>
<tr><th colspan=12><font size="+2">Результаты ММБ2006, дистанция Б</font></th>
<th colspan=2>$res::mmb_count
</th>
</tr>
<tr>
<td colspan=15>
<p>Хорошово - Пески, 28-29 октября

<p>Первый этап: 13+10 КП, 34 км. Старт с 9:00 до 14:00 субботы 28 октября,
контрольное время до 14:00 воскресенья.

<p>Второй этап: 6 КП, 14 км. Старт с 9:00 до 14:00 
воскресенья, контрольное время -- до 21:00 воскресенья. 

<p>Команды, опоздавшие к 14:00 на пром.финиш могли стартовать позже.

<p>Штраф за невзятие КП: 1 час на второй части первого этапа
(ориентирование по космостнимку), 2 часа -- все остальные.

<p> Карты дистанции:
<p>
<a href="06o/b1.png">  <img src="06o/b1.jpg"  width=113 height=160 alt="b-1 (первый этап)"></a>
<a href="06o/b2.png">  <img src="06o/b2.jpg"  width=113 height=160 alt="b-2 (первый этап)"></a>
<a href="06o/ab3.png"> <img src="06o/ab3.jpg" width=113 height=160 alt="b-3 (первый этап)"></a>
<a href="06o/b4.png">  <img src="06o/b4.jpg"  width=113 height=160 alt="b-4 (второй этап)"></a>
</td>
</tr>
</td>
</tr>
* if $dist eq 'b'; 


print OUT qq*
<tr>
<th rowspan=2>N</th>
<th rowspan=2>Команда</th>
<th colspan=5>первый этап</th>
<th colspan=4>второй этап</th>
<th colspan=2>итог</th>
</tr>
<tr>
<th>ст. - см.карт - фин.</th>
<th>невз.КП карта</th>
<th>невз.КП снимок</th>
<th>рез.</th>
<th>м</th>
<th>ст. - фин.</th>
<th>невз.КП</th>
<th>рез.</th>
<th>м</th>
<th>рез.</th>
<th>м</th>
</tr>
*;

foreach ( sort {$a->{srt} <=> $b->{srt}} @ddd) {
#  next if $_->{u1} eq '';
  next if $_->{d} ne $dist;

  $_->{r1} = res::m2t($_->{r1});
  $_->{r2} = res::m2t($_->{r2});
  $_->{r3} = res::m2t($_->{r3});
  $_->{r} = res::m2t($_->{r});

  $_->{pr2} = 'вых. за к.в.' if $_->{pr2} eq 'kv';
#  $_->{pr3} = '*' if $_->{pr3} eq 'kv';
  $_->{pr1} = 'сх.уч.' if $_->{pr1} eq 'su';
  $_->{pr2} = 'сх.уч.' if $_->{pr2} eq 'su';
  $_->{pr3} = 'сх.уч.' if $_->{pr3} eq 'su';
  $_->{pr2} = 'время финиша приблизительно' if $_->{pr2} eq 'fa';

#  foreach my $f ('kp1','m1','t2s','kp2','m2','m','r1','r2','r'){
#    $_->{$f} = '&nbsp;' if $_->{$f} eq '';
#  }

  print OUT "<tr>", reg::html_cell(\@cdata, $_->{n}), "\n";
  print OUT "<td>$_->{t1s}";
  print OUT " -- $_->{t1v}" if defined $_->{t1v};
  print OUT " -- $_->{t1f}" if defined $_->{t1f};
  print OUT "<br>$_->{pr1}" if defined $_->{pr1};
  print OUT " $_->{pr2}" if defined $_->{pr2};
  print OUT "</td>\n";
  print OUT "<td align=center>$_->{kp1}</td>\n";
  print OUT "<td align=center>$_->{kp2}</td>\n";
  print OUT "<td align=center>$_->{r2}</td>\n";
  print OUT "<td align=center>$_->{m2}</td>\n";

  print OUT "<td>$_->{t2s}";
  print OUT " -- $_->{t2f}" if defined $_->{t2f};
  print OUT "<br>$_->{pr3}" if defined $_->{pr3};
  print OUT "</td>\n";
  print OUT "<td align=center>$_->{kp3}</td>\n";
  print OUT "<td align=center>$_->{r3}</td>\n";
  print OUT "<td align=center>$_->{m3}</td>\n";

  print OUT "<td align=center><font size=\"+1\">$_->{r}</font></td>\n";
  print OUT "<td align=center><font color=\"$fg_m\" size=\"+1\">$_->{m}</font></td>\n";
  print OUT "</tr>\n";
}
print OUT qq*
<tr>
<th colspan=15>

<p>Подготовка дистанции: А.Тонис, А.Чупикин, В.Завьялов.<br>
Проведение марш-броска: те же и Я.Галухина, О.Урюпина, К.Шрамов, В.Феоктистов, Д.Шварц<br>
</th>
</tr>
</table>
</body>
</html>
*;


open OUT, "> data_out/ludi06o$dist.txt";
foreach ( sort {$a->{srt} <=> $b->{srt}} @ddd ) {
  next if $_->{d} ne $dist;
#  next if $_->{t1s} eq '';
  my $nu=0;
  foreach my $u (1..9){
    $nu++ if $cdata[$_->{n}]->{"u$u"} ne '';
  }
  foreach my $u (1..9){
    next if $cdata[$_->{n}]->{"u$u"} eq '';
    printf OUT "%-40s\tN%d%s", $cdata[$_->{n}]->{"u$u"}, $_->{n}, ($_->{d} eq 'a' ?'А':'Б');
    printf OUT " \"%s\"", $cdata[$_->{n}]->{"name"} if $cdata[$_->{n}]->{"name"} ne '';
    printf OUT " ($nu чел.)\t";

    if ($_->{m} ne '') {
      print OUT "$_->{r} ($_->{m} место)";}
    elsif ($_->{r} ne '') {
      print OUT "$_->{r} (вне зачета)";}
    else {print OUT "сход с дистанции";}
    print OUT "\n";
  }
}

}
