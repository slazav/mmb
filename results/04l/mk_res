#!/usr/bin/perl -w -I../perl

use strict;
use res;
use reg;


# Чтение данных
my @data;
res::read_tbl("data_in/r1.dat", \@data, 4);
res::read_tbl("data_in/r2.dat", \@data, 3);
res::read_tbl("data_in/r3.dat", \@data, 4);
my @cdata;
reg::data_read("data_in/reg.dat", \@cdata);
reg::modif_names(\@cdata);

my @ddd;

# Подсчет результатов
for (my $n=0; $n<=$#data; $n++){

  $ddd[$n]->{n}   = $n;

  $ddd[$n]->{s1t} = ${$data[$n]}[1];
  $ddd[$n]->{f1t} = ${$data[$n]}[2];
  $ddd[$n]->{kp1} = ${$data[$n]}[3];

  $ddd[$n]->{s2t} = ${$data[$n]}[4];
  $ddd[$n]->{f2t} = ${$data[$n]}[5];
  $ddd[$n]->{kp2} = ${$data[$n]}[6];

  $ddd[$n]->{s3t} = ${$data[$n]}[7];
  $ddd[$n]->{f3t} = ${$data[$n]}[8];
  $ddd[$n]->{kp3} = ${$data[$n]}[9];
  $ddd[$n]->{pr} = ${$data[$n]}[10];

  my $shtr1;
  my $shtr2;
  my $shtr3;
  $shtr1 = res::kp_conv($ddd[$n]->{kp1}, 
  {1=>60, 2=>120, 3=>120, 4=>120});

  $shtr2 = res::kp_conv($ddd[$n]->{kp2}, 
  {5=>120, 6=>60, 7=>120, 8=>120, 10=>120, 11=>120, 12=>120, 13=>60});

  $shtr3 = res::kp_conv($ddd[$n]->{kp3}, 
  {14=>120, 15=>120, 16=>120, 17=>60, 18=>120, 19=>120, 20=>120, S=>-120});

  $ddd[$n]->{r1}='';
  if ($ddd[$n]->{f1t} ne ''){
    $ddd[$n]->{r1}= res::time_conv($ddd[$n]->{f1t}, "12:00") - 
    res::time_conv($ddd[$n]->{s1t}, "12:00") + $shtr1;
  }

  $ddd[$n]->{r2} = '';
  if ($ddd[$n]->{f2t} ne ''){
    $ddd[$n]->{r2}= res::time_conv($ddd[$n]->{f2t}, "17:00") - 
    res::time_conv($ddd[$n]->{s2t}, "17:00") + $shtr2;
  } 
  elsif ($ddd[$n]->{s3t} ne ''){
    $ddd[$n]->{r2} = 14*60;
  }

  $ddd[$n]->{r3}='';
  if ($ddd[$n]->{f3t} ne ''){
    $ddd[$n]->{r3}= res::time_conv($ddd[$n]->{f3t}, "00:00") - 
    res::time_conv($ddd[$n]->{s3t}, "00:00") + $shtr3;
  }


  $ddd[$n]->{r}='';
  if (($ddd[$n]->{r1} ne '')&&($ddd[$n]->{r2} ne '')&&($ddd[$n]->{r3} ne '')){
    $ddd[$n]->{r}= $ddd[$n]->{r1} + $ddd[$n]->{r2} + $ddd[$n]->{r3};
  }
}

# определение мест
my (%r1c, %r2c, %r3c, %rc);
my (%r1m, %r2m, %r3m, %rm);

for (my $n=0; $n<=$#ddd; $n++){ # сколько мест с одинаковым временем
  $r1c{$ddd[$n]->{r1}}++ if $ddd[$n]->{r1} ne '';
  $r2c{$ddd[$n]->{r2}}++ if $ddd[$n]->{r2} ne '';
  $r3c{$ddd[$n]->{r3}}++ if $ddd[$n]->{r3} ne '';
  next if $ddd[$n]->{pr} eq 'su';
  next if $ddd[$n]->{pr} eq 'kv';
  next if $ddd[$n]->{pr} eq 'ra';
  $rc{$ddd[$n]->{r}}++ if $ddd[$n]->{r} ne '';
}

my $m=1;
foreach (sort {$a<=>$b} keys %r1c){
  $m += $r1c{$_};
  if ($r1c{$_}==1) {$r1m{$_} = $m-1;}
  else {$r1m{$_} = ($m-$r1c{$_})."-".($m-1);}
}
$m=1;
foreach (sort {$a<=>$b} keys %r2c){
  $m += $r2c{$_};
  if ($r2c{$_}==1) {$r2m{$_} = $m-1;}
  else {$r2m{$_} = ($m-$r2c{$_})."-".($m-1);}
}
$m=1;
foreach (sort {$a<=>$b} keys %r3c){
  $m += $r3c{$_};
  if ($r3c{$_}==1) {$r3m{$_} = $m-1;}
  else {$r3m{$_} = ($m-$r3c{$_})."-".($m-1);}
}
$m=1;
foreach (sort {$a<=>$b} keys %rc){
  $m += $rc{$_};
  if ($rc{$_}==1) {$rm{$_} = $m-1;}
  else {$rm{$_} = ($m-$rc{$_})."-".($m-1);}
}
$r1m{''}='';
$r2m{''}='';
$r3m{''}='';
$rm{''}='';


# глобальный порядок сортировки
my $i=0;
foreach (@ddd) {
  $_->{srt} = 100000;
  $_->{m1} = $r1m{$_->{r1}};
  $_->{m2} = $r2m{$_->{r2}};
  $_->{m3} = $r3m{$_->{r3}};
  $_->{m} = $rm{$_->{r}};

  $_->{m} = '' if ($_->{pr} eq 'su');  ## вне зачета
  $_->{m} = '' if ($_->{pr} eq 'kv');  ## вне зачета
  $_->{m} = '' if ($_->{pr} eq 'ra');  ## вне зачета

  $_->{m2} = '' if ($_->{f2t} eq ''); 

  if    ($_->{m}  =~ /^(\d+)/) {$_->{srt} = $1;}
  elsif ($_->{r} ne '') {$_->{srt} = $i+10000;} ### вне зачета
  elsif ($_->{m2} =~ /^(\d+)/) {$_->{srt} = $1+20000;} ### первый и второй этап
  elsif ($_->{m1} =~ /^(\d+)/) {$_->{srt} = $1+30000;} ### только первый этап
  else  {$_->{srt} = $i+50000; $i++}
#  print STDERR "$dist\tN: $_->{n}\tM: $_->{m}\tS: $_->{srt}\n";
}

### вывод!

open OUT, "> data_out/res04l.htm";
my $fg_m = '#F00000';

print OUT qq*
<html><head>
<style type="TEXT/CSS">
TH {font-family: sans-serif; font-size:15px; background-color: \#A0A0A0;}
TD {font-family: sans-serif; font-size:15px; background-color: \#C0C0C0;}
</STYLE>
</head>
<body>


<p><table border=0 cellspacing=1 cellpadding=5>
<tr><th colspan=14><font size="+2">Результаты ММБ2004</font></th>
<th colspan=2>$res::mmb_count
</th>
</tr>
<tr>
<td colspan=16>
<p>Жилево - Белопесоцкий, 30-31 октября 2004 года

<p>1 этап: 10 км, 4 КП. 2 этап: 10 км, 8 КП. 3 этап: 10 км, 7 КП

<p>Штраф за невзятие КП:
2-5, 7, 8, 10-12, 14-20 -- 2 часа; 1, 6, 13 -- 1 час; КП 9 -- отсутствовало. 
Кроме того, на третьем этапе находмлось скрытое КП, за нахождение которого из
результата вычиталось 2 часа. (в протоколе нахождение скрытого КП отмечено буквой S)

<p>Карты 
<ul>
<li><a href="04l/m1.png">карта первого и второго этапа</a>
<li><a href="04l/m2.png">карта третьего этапа</a>
<li><a href="04l/l1.png">легенда первого этапа</a>
<li><a href="04l/l2.png">легенда второго этапа</a>
<li><a href="04l/l3.png">легенда третьего этапа</a>
<li><a href="04l/mmbmaps.zip">файлы привязки для OziExplorer</a>
</ul>

</td>
</tr>
<tr>
<th rowspan=2>N</th>
<th rowspan=2>Команда</th>
<th colspan=4>1 этап</th>
<th colspan=4>2 этап</th>
<th colspan=4>3 этап</th>
<th colspan=2>итог</th>
</tr>
<tr>
<th>ст. - фин.</th>
<th>невз.КП</th>
<th>рез.</th>
<th>м</th>
<th>ст. - фин.</th>
<th>невз.КП</th>
<th>рез.</th>
<th>м</th>
<th>ст. - фин.</th>
<th>невз.КП</th>
<th>рез.</th>
<th>м</th>
<th>рез.</th>
<th>м</th>
</tr>
*;



foreach ( sort {$a->{srt} <=> $b->{srt}} @ddd) {
  next if $_->{s1t} eq '';

  $_->{r1} = res::m2t($_->{r1});
  $_->{r2} = res::m2t($_->{r2});
  $_->{r3} = res::m2t($_->{r3});
  $_->{r} = res::m2t($_->{r});

  $_->{pr} = 'вых. за к.в.' if $_->{pr} eq 'kv';
  $_->{pr} = 'сх.уч.' if $_->{pr} eq 'su';
  $_->{pr} = 'разд.на 2эт.' if $_->{pr} eq 'ra';
  $_->{pr} = 'вело' if $_->{pr} eq 've';

#  foreach my $f ('kp1','m1','t2s','kp2','m2','m','r1','r2','r'){
#    $_->{$f} = '&nbsp;' if $_->{$f} eq '';
#  }

  print OUT "<tr>", reg::html_cell(\@cdata, $_->{n}), "\n";

  print OUT "<td>$_->{s1t}-";
  print OUT "$_->{f1t}" if $_->{f1t} ne '';
  print OUT "</td>\n";
  print OUT "<td align=center>$_->{kp1}</td>\n";
  print OUT "<td align=center>$_->{r1}</td>\n";
  print OUT "<td align=center><b>$_->{m1}</b></td>\n";
 
  if ($_->{s2t} ne '') {print OUT "<td>$_->{s2t}-$_->{f2t}</td>";}
  else {print OUT "<td></td>";}
  print OUT "<td align=center>$_->{kp2}</td>\n";
  print OUT "<td align=center>$_->{r2}</td>\n";
  print OUT "<td align=center><b>$_->{m2}</b></td>\n";

  if ($_->{s3t} ne '') {print OUT "<td>$_->{s3t}-$_->{f3t}</td>";}
  else {print OUT "<td></td>";}
  print OUT "<td align=center>$_->{kp3}</td>\n";
  print OUT "<td align=center>$_->{r3}</td>\n";
  print OUT "<td align=center><b>$_->{m3}</b></td>\n";

  print OUT "<td align=center><font size=\"+1\">$_->{r}</font></td>\n";
  print OUT "<td align=center><font color=\"$fg_m\" size=\"+1\">$_->{m}</font>$_->{pr}</td>\n";
  print OUT "</tr>\n";
}

print OUT qq*
<tr>
<th colspan=16>
Подготовка дистанции: А.Тонис, В.Завьялов, Ю.Приходько.
Проведение марш-броска: те же, Д. и А. Шварц.
</th>
</tr>
</table>
</body>
</html>
*;

open OUT, "> data_out/ludi04l.txt";
foreach ( sort {$a->{srt} <=> $b->{srt}} @ddd ) {
  next if $_->{s1t} eq '';
  my $nu=0;
  foreach my $u (1..9){
    $nu++ if $cdata[$_->{n}]->{"u$u"} ne '';
  }
  foreach my $u (1..9){
    next if $cdata[$_->{n}]->{"u$u"} eq '';
    printf OUT "%-40s\tN%d", $cdata[$_->{n}]->{"u$u"}, $_->{n};
    printf OUT " \"%s\"", $cdata[$_->{n}]->{"name"} if $cdata[$_->{n}]->{"name"} ne '';
    printf OUT " ($nu чел.)\t";

    if ($_->{m} ne '') {
      print OUT "$_->{r} ($_->{m} место)";}
    elsif ($_->{r} ne '') {
      print OUT "$_->{r} (вне зачета)";}
    else {print OUT "сход с дистанции";}
    print OUT "\n";
  }
}
